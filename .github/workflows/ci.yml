name: CI pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    working-directory: inno-microservices/UserService

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: temurin
          cache: gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew clean assemble

  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: temurin
          cache: gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run tests
        run: ./gradlew test

  sonarqube:
    name: Code Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: temurin
          cache: gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run tests and generate Jacoco report
        run: ./gradlew clean test jacocoTestReport
      - name: SonarCloud scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: voodzz_inno-microservices
          SONAR_ORG: voodzz
          SONAR_HOST_URL: https://sonarcloud.io
        run: >
          ./gradlew clean build sonar
          -Dsonar.projectKey=$SONAR_PROJECT_KEY
          -Dsonar.organization=$SONAR_ORG
          -Dsonar.host.url=$SONAR_HOST_URL
          -Dsonar.java.binaries=build/classes/java/main
          -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml

  docker:
    name: Artifact Creation (Docker Image)
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - uses: actions/checkout@v4
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build JAR
        run: ./gradlew clean assemble
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: inno-microservices/UserService
          file: inno-microservices/UserService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/userservice:latest